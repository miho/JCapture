buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        //
    }
}

plugins {
    id "com.github.hierynomus.license" version "0.13.1"
    id 'maven-publish'
    id 'net.nemerosa.versioning' version '2.4.0'
    id 'com.jfrog.bintray' version '1.7.3'
    id 'com.github.ben-manes.versions' version '0.13.0'
}

apply plugin: 'java'
apply from: 'gradle/publishing.gradle'

task wrapper(type: Wrapper) {
    gradleVersion = '4.0'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}

if (!hasProperty('mainClass')) {
    ext.mainClass = 'eu.mihosoft.jcapture.Main'
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.10'

    compile group: 'org.boofcv', name: 'core', version: '0.26'
    compile group: 'org.boofcv', name: 'core', version: '0.26', classifier: 'sources'
    compile group: 'org.boofcv', name: 'core', version: '0.26', classifier: 'javadoc'

    compile group: 'org.boofcv', name: 'WebcamCapture', version: '0.26'
    compile group: 'org.boofcv', name: 'WebcamCapture', version: '0.26', classifier: 'sources'
    compile group: 'org.boofcv', name: 'WebcamCapture', version: '0.26', classifier: 'javadoc'

    compile 'com.github.sarxos:webcam-capture:0.3.11'

    compile group: 'eu.mihosoft.vcollections', name: 'vcollections', version: '0.2.0'
    compile group: 'eu.mihosoft.vcollections', name: 'vcollections', version: '0.2.0', classifier: 'sources'
}

license {
    header = rootProject.file('config/HEADER')
    strictCheck = true
    ignoreFailures = true
    mapping {
        java   = 'SLASHSTAR_STYLE'
        groovy = 'SLASHSTAR_STYLE'
        fxml   = 'XML_STYLE'
    }
    ext.yearSince1   = '2017'
    ext.yearCurrent  = new java.text.SimpleDateFormat("yyyy").format(new Date())
    ext.author1 = 'Michael Hoffer <info@michaelhoffer.de>'
    exclude '**/*.svg'
}

// task run(type: JavaExec) {
//     classpath = sourceSets.main.runtimeClasspath
//
//     main = mainClass
//
//     // arguments to pass to the application
// //    args 'appArg1'
//     // jvmArgs 'arg1'
// }
